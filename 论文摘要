浙江水利水电学院优秀毕业设计（论文）摘要
在线音乐网站设计与实现
专业班级：  学生姓名：
指导教师：
摘要：
当今社会是一个以互联网为中心的星型拓扑结构的多元化社会，伴随而来的以用户体验为核心的互联网衍生品迅速的改变了人们的生活方式。本项目立项的初衷是设计一个方便友好的UI(User Interface)界面，打造出一个“小而美”的在线音乐产品，区分于现有的市面上通用的商用型音乐网站，为用户提供一个简单易用的、纯粹的、非商业性的，具有特色功能的在线音乐网站。
基于当下前后端分离的设计思想，设计并实现一个B/S体系架构的Internet在线音乐网站。前端使用Vue.js进行页面的设计与渲染；后端采用Spring Boot快速搭建项目并使用Java语言编写并处理业务逻辑；使用MySQL8.0数据库实现持久化存储数据；采用JSON作为数据格式传输协议并通过接口交互实现前后端的数据通信。
关键词: 在线音乐网站；前后端分离；Vue.js；Spring Boot；My SQL
Abstract：
The society we live in is pluralistic that with a star-centric topology centered on the Internet. More importantly, internet derivatives who focus on user experience are already improve our life quickly. The original intention of this project is design a friendly UI (User Interface) to building a beautiful and minority of the population music website which distinguish from the existing commercial music website, and it just provide an easy-to-use, purely non-commercial, featured online music website.
Influenced by the thought of view and logic separation, we designed and developed an internet online music website with B/S (Browser/Server) architecture. Our view pages used Vue.js to design and render; And the back business logic used Spring Boot to quickly build the project and developed the business logic with Java language; The MySQL 8.0 database was used to implement persistent storage data; In order to implement communication at the front view project and back logic project, we used the JSON data format transfer protocol to reduce development difficulty.
Keywords：online music website; view and logic separation; Vue.js；Spring Boot; My SQL
0引言
随着互联网技术的迅速发展，传统行业也逐步加入数字化的浪潮中，互联网+时代悄然而至，极大的便利了人们的生活，这种现象在音乐行业表现的尤为突出，各大音乐网站犹如雨后春笋争涌而出。时至今日，中国的数字音乐市场逐步进入典型长尾市场阶段[1]，音乐网站的发展趋势也分为歌曲版权化，设计情感化两大方向[2][3]，但最终目的都是吸引用户从而实现盈利。由于网站发展的核心目标向盈利靠拢，已经不是为了以分享音乐为目的去丰富人们的日常生活乐趣而存在的，直接导致用户的使用体验变差。因此，此项目立项的初衷便是为用户提供一个免费的音乐平台，以用户体验为核心并不断优化，打造出一个纯粹的、具有自身特色的、小而美的在线音乐网站。
1相关技术简介
1.1框架技术简介
a)前后端分离框架
前后端分离已经成为互联网行业项目的开发标准，并且逐步取代了之前的全栈式开发方式。通过前后端的分离，使得前后端能够各司其职，后端项目的侧重点在于服务的提供、逻辑的处理与数据的分析；前端的侧重点在于后端提供的服务的使用与UI的设计。前后端的分离使得开发人员各司其职，前后端通过定义接口来实现通信。后端人员更加注重服务的提供，前端人员更加注重数据的渲染与展示，使得分工更加明确，减少前后端的耦合性[4]，降级开发团队的合作难度与项目后期的维护成本与维护难度。
b)Spring Boot框架
Spring Boot来源于Spring、Spring MVC 技术，通过提供默认配置的方式，使开发人员的精力更多的倾向于业务逻辑的处理，增加了开发效率[5]。此外，提供自定义义配置功能，可以在配置文件中进行微调，或覆盖原有的配置,并且内嵌Tomcat，实现项目的一键部署，真正实现开箱即用。
c)JPA框架
JPA是Sun公司官方推出的Java持久层API规范标准，它为Java开发人员提供了一种对象/关系映射工具来管理Java应用中的关系数据[6]。其特色之处在于对象创建接口文件之后，便能实现简单的增删改查，同时，可以在接口类中根据JPA的语法规则编写查询接口方法，可以自动根据定义的接口方法生成SQL语句进行数据的查询，同时支持原生的SQL查询[7]。
d)Vue.js框架
Vue.js是采用自底向上的增量开发设计的一套渐进式UI界面渲染框架，是一款轻量级的、拥有许多独立功能和库的开发框架，十分易于与其他库或现有项目进行整合[4]。最主要的特点是响应式数据绑定（基于MVVM(Model-View-View-Model)特性）与可组合的视图组件。响应式数据绑定即当绑定数据的对象发生变化时自动更新视图展示；可组合的视图组件即Vue.js框架允许组件化开发，多个小组件分别实现不同的功能，通过组件的聚合将页面完整的渲染出来，提高开发效率。
1.2B/S架构简介
B/S(Browser/Server)架构区别于传统的Ｃ/S(Client/Server)模式，将系统的核心服务转移到后端服务器上,便于系统的开发与后期维护，同时在一定程度上降低了客户端的压力,是目前应用系统的发展方向[8]。同时由于客户端只需要一个浏览器便可以完整的体验到产品的功能，也增加了对用户的友好程度。
2系统分析
2.1可行性分析
a)市场可行性分析：
目前市场上的音乐网站由于其发展重心逐步向盈利偏移，大都插入了不少广告。甚至由于业务的相互渗透，导致音乐网站中还嵌入了直播、搞笑段视频等冗余功能，导致用户体验满意度成直线下降。因此，在这个版权收缩的时代，采用版权转授的合作方式、用户原创内容上传的方式，扩充曲库资源，走情感化设计路线，注重用户的体验，是有广阔的发展空间和用户数量的优势的。
b)经济可行性分析：
由于本项目使用的软件及技术全部为开源免费的，前期曲库来源主要以网友自行上传的原创性作品为主，投入资金基本较低，但成型产品所带来的用户信息、流量信息所带来的经济效益是无法估量的，因此开发本系统从经济上分析是完全可行的。
2.2需求分析
a)用户需求：
1)热点歌曲推荐：系统根据音乐的全网好评度，向用户推荐歌曲；
2)新歌推送：系统向用户推送近30天内的新发布歌曲；
3)热门歌曲推送：系统向用户推送当前流行的热门歌曲；
4)爱豆歌曲推送：系统向用户推荐当前登录用户收藏歌曲中歌手出现次数最多三人的所有歌曲；
5)歌曲搜索：允许用户根据歌名进行模糊搜索并播放该歌曲；
6)歌曲收藏：允许用户收藏歌曲并查看收藏的歌曲；
7)歌曲点赞：允许所有用户对喜爱的歌曲进行点赞；
8)用户信息编辑：允许已登录用户对个人的注册信息进行编辑，包括用户昵称、个人简介。
b)功能需求：
1)实现登录、注册、退出登录功能，使用MD5加密，保证账号的安全性；
2)收集用户行为数据，预测用户喜好的歌曲；
3)用户信息收集，允许用户进行查看并修改；
4)记录歌曲点赞信息；
5)记录用户收藏歌曲信息；
6)实现用户30min无操作自动下线；
7)处理歌曲的推荐度、热度。
c)业务需求：
1)区别游客用户与登录用户并提供对应服务；
2)前后端分离，提供restful风格接口使用JSON格式数据进行数据通信。
3系统详细设计
3.1设计的原则及目标
a)设计原则：
1)保证用户对音乐网站基本功能的享用；
2)保证网站的时尚元素；
3)保证网站的易用性。
b)设计目标：
1)设计UI要求尽可能简洁，风格独立；
2)核心功能完善，满足用户对于在线音乐网站的基本需求；
3)易于维护与二次开发。
3.2相关技术要求
a)前端技术要求：
1)组件化开发，提高代码复用性；
2)实现异常处理；
3)保证渲染速度不超过2000ms。
b)后端技术要求：
1)提高代码复用性；
2)实现异常处理；
3)接口响应时长不超过1000ms；
4)统一接口返回数据。
3.3系统体系架构设计
本系统由前端展示页面与后端业务逻辑处理模块组成，其中后台包括定时任务模块与接口提供模块。后端为前端提供逻辑处理服务，用户通过浏览器便可以使用本网站的全部功能[9]。
前端展示界面即UI界面，与用户直接进行交互，监听用户的所有动作行为（包括点击、输入、搜索等）调用后端接口管理模块提供的接口进行请求数据完成页面的渲染与展示。
后端接口管理模块对外提供接口，对前端请求接口时的参数进行解析并进行相关的业务处理后返回指定数据给前端。
后端定时任务模块主要处理歌曲热度相关方面的逻辑，方便后端接口管理模块进行数据库数据方面的查询等操作。同时负责用户的定时下线功能，当用户30分钟内无操作时默认用户下线。
3.4功能设计
功能设计包含三大模块组成：通用功能、基础功能、登录用户功能。
通用功能模块即游客用户与注册登录用户均可使用的功能，包含热门神曲、新歌速递、歌曲搜索、今日热点。
	今日热点的主要功能是向用户（包括未登录的游客用户）推荐今日热门歌曲（区别于热门神曲功能），今日热点中的推荐歌曲按照新歌与热门歌曲一定比例来推荐向用户推荐歌曲；新歌速递的功能是向用户（包括未登录的游客用户）推荐30天内上架的新歌；热门神曲的功能是向用户（包括未登录的游客用户）推荐当前最为热门的那部分歌曲。
	基础功能模块即为登录用户提供功能时必要的基础功能，包括注册、登录、用户信息修改。
	登录用户功能模块面向与已登录的用户，包含爱豆之家、心动模式、个人私藏三个功能。
爱豆之家是向用户推荐（仅服务于登录用户）自己的偶像歌手的歌曲；个人私藏及展示已登录用户手动收藏的歌曲；心动模式即根据用户的喜好向已登录的当前用户推荐感兴趣的歌曲。
3.5数据库设计
数据库设计是系统设计的重要一环，良好的数据模型可以提高网站的运行效率并降低后期的维护难度[10]。本网站进行系统设计时，出于性能考虑，使用MySQL8.0，相较与5.7版本存储性能提高两倍。数据库字符集采用utf8-bin编码规则，兼容现有的所有可见字符并严格区分大小写，所有表名、字段名全部使用小写字母与下划线组合的方式进行命名，以便于后期维护。对于数据库表中的varchar类型字段按需采用编码规则，根据业务要求是否对大小写敏感。
4系统功能实现
4.1前后端通信实现
a)接口返回数据格式定义：
接口返回使用统一的固定的格式的JSON数据，数据格式定义如下：
{
			"code": 0,
			"msg": "success",
			"result": {}
}
其中code为后台进行逻辑处理后的返回码，前端使用此返回码来确定请求是否成功及请求数据的返回状态；msg为返回消息内容，与code值一一对应，简要描述此次数据请求的状态，；result为返回结果，可以为任意类型的返回值。
b)前后端通信流程：
前端调用接口，后端处理业务逻辑后将处理结果以上述定义格式返回给前端；前端拿到返回数据后根据code值判断是否需要异常处理，并进行页面渲染。
4.2通信接口定义与实现
系统的功能实现依靠前后端接口的调用，接口数据格式协议统一使用JSON，一个功能的实现需要一个或多个接口，各模块实现接口如下：
a)基础功能模块：
1)登录接口；
2)注册接口；
3)退出登录接口；
4)注册验证码获取接口；
5)用户登录状态校验接口；
b)通用功能模块：
1)新歌速递接口；
2)歌曲点赞接口；
3)热门神曲接口；
4)歌曲搜索接口；
5)热点歌曲推荐接口；
c)登录用户功能模块：
1)歌曲收藏接口；
2)用户信息编辑接口；
3)查看用户收藏歌曲接口；
4)爱豆之家歌曲推荐接口；
5)心动模式歌曲推荐接口；
6)歌曲评论接口；
7)删除收藏歌曲接口；
4.3其他功能实现
用户自动下线功能使用定时任务实现，用户每次请求接口时都会更新活动状态，当用户活动记录超过30min未进行更新时，程序自动删除用户的活动记录，实现超时下线功能。
5结论
本文给出了完整的音乐网站设计与功能实现方案，采用前后端分离的设计架构，使用JSON格式的数据利用接口进行前后端的数据交互，减小业务的耦合性；项目后端使用Spring Boot框架进行后台项目架构的搭建以减少配置的精力投入，更专注于代码的逻辑业务处理；使用最新版MySQL8.0进行数据的持久化存储，相比5.7版本的存取速度快2倍左右；使用阿里巴巴提供的开源数据库连接池Druid进行数据库的连接配置，优化连接效率，降低数据库的连接负载；使用Spring Boot Data JPA实现数据持久化操作；使用Vue.js进行前端模块组件化开发，提高代码的重用性；使用JSON格式的数据进行接口通信，提高页面的响应速度、便于后期维护。
在产品设计上严格遵循项目立项的初衷，打造出一款简单易用的、纯粹的、非商业性的、以用户体验为中心的小而美的在线音乐网站。并根据产品的需求功能，借鉴其他优秀音乐网站的开发经验后，设计并实现一个B/S体系结构的在线音乐网站。此款产品虽仍有不合理的地方，但依然可以满足用户的日常使用，并且将会以此为原型进行迭代开发，打造出一款真正以用户体验为核心的音乐产品。

参考文献
[1]余铮,赵飞.中国数字音乐长尾市场的现状分析与拓展策略[J].湖北民族学院学报(哲学社会科学版),2016,34(03):54-58. 
[2]张驰.音乐版权互授:内容创新营销崛起[J].现代企业文化(上旬),2018(10):110-111.
[3]张莉,李林芳.在线音乐网站的情感化交互设计[J].工业设计,2012(08):67-69.
[4]李宇,刘彬.前后端分离框架在软件设计中的应用[J].无线互联科技,2018,15(17):41-42
[5]刘云浩,李沛.基于Spring Boot的后台服务器开发[J].中国科技信息,2018(17):61-62.
[6]JPA入门 - 博客频道 - CSDN.NET   - 《网络（http://blog.csdn.net）》
[7]周光明.一种电子商务系统架构的研制与优化[J].深圳职业技术学院学报,2017,16(03):18-22.
[8]林伟婷.C/S与B/S架构技术比较分析[J].科技资讯,2018,16(13):15-16.
[9]袁怀民,丁小峰.基于ASP技术的音乐网站的设计[J].科技信息,2011(08):628.
[10]黄雅琼.数据库设计在网站开发中的应用[J].科技风,2018(11):44.
